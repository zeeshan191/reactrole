{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\reduz\\\\src\\\\routes\\\\Auth.js\";\nimport React, { memo } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLoggedIn } from 'utils';\nimport PublicRoutes from './PublicRoutes';\n/*\n* TODO: when user loggedIn he/she unable to goto public routes\n*  ie: ('/about', '/contact', 'any other public route')\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth() {\n  // TODO: temp logged-in check, update as per your app logic\n  return isLoggedIn() ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }, this);\n}\n\n_c = Auth;\nexport default _c2 = /*#__PURE__*/memo(Auth);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/reduz/src/routes/Auth.js"],"names":["React","memo","Redirect","isLoggedIn","PublicRoutes","Auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,IAAT,GAAgB;AACf;AACA,SAAOF,UAAU,kBACf,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADe,gBAGf,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAHF;AAKA;;KAPQE,I;AAST,kCAAeJ,IAAI,CAACI,IAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLoggedIn } from 'utils';\nimport PublicRoutes from './PublicRoutes';\n\n/*\n* TODO: when user loggedIn he/she unable to goto public routes\n*  ie: ('/about', '/contact', 'any other public route')\n*/\nfunction Auth() {\n\t// TODO: temp logged-in check, update as per your app logic\n\treturn isLoggedIn() ? (\n\t\t\t<Redirect to=\"/app\" />\n\t\t) : (\n\t\t\t<PublicRoutes />\n\t\t)\n}\n\nexport default memo(Auth);\n"]},"metadata":{},"sourceType":"module"}