{"ast":null,"code":"import { Roles } from 'config'; // Components\n\nimport { Module1, Module2, Module3, ModuleN, ModuleNChild1, ModuleNChild2, ModuleNChild3, Dashboard, Profile } from 'components'; // TODO:\n\n/*\n* 1. Make title optional\n* 2. Make title multi type support ie: (string, node, react element)\n* 3. Add child route support\n* */\n\n/*\n* Route config object supports all react-router's route component props with some additional props ie: (title, permission, children)\n* you can add or remove props from config object it's means it is super customizable and support upto N nesting, child routes must follow the same parent shape,\n* it means the config object is same for both there is no additional key for child nor for parent.\n* you can find route props from here https://reactrouter.com/web/api/Route let's take a look at some additional props\n* 1. permission: permission is an optional prop and it's type is an array of roles, permission is used for allowing certain users/roles\n*  \tto have access of that route and if you skip/omit the permission or it's an empty array that means every authenticated user/role have access to that route.\n* 2. title: title is an optional prop and it's type is a string|node it is used for mapping route link into a navigation\n* 3. children: children is also an optional prop and it's type is an array of route config objects, children are used for nested routes\n* */\n\nexport default [{\n  component: Module1,\n  path: '/',\n  title: 'Module - 1',\n  exact: true\n}, {\n  component: Module2,\n  path: '/module-2',\n  title: 'Module - 2'\n}, {\n  component: Module3,\n  path: '/module-3',\n  title: 'Module - 3'\n}, {\n  component: ModuleN,\n  path: '/module-n',\n  title: 'Module - N',\n  permission: [Roles.SUPER_ADMIN, Roles.ADMIN, Roles.MANAGER],\n  children: [{\n    component: ModuleNChild1,\n    path: '/child-1',\n    title: 'Child - 1'\n  }, {\n    component: ModuleNChild2,\n    path: '/child-2',\n    title: 'Child - 2'\n  }, {\n    component: ModuleNChild3,\n    path: '/child-3',\n    title: 'Child - 3',\n    permission: [Roles.SUPER_ADMIN, Roles.ADMIN]\n  }]\n}, {\n  component: Dashboard,\n  path: '/dashboard',\n  title: 'Dashboard',\n  permission: [Roles.SUPER_ADMIN, Roles.ADMIN]\n}, {\n  component: Profile,\n  path: '/profile',\n  title: 'Profile',\n  permission: [Roles.SUPER_ADMIN, Roles.ADMIN, Roles.MANAGER, Roles.CUSTOMER]\n}];","map":{"version":3,"sources":["C:/Users/HP/Downloads/reduz/src/config/PrivateRoutesConfig.js"],"names":["Roles","Module1","Module2","Module3","ModuleN","ModuleNChild1","ModuleNChild2","ModuleNChild3","Dashboard","Profile","component","path","title","exact","permission","SUPER_ADMIN","ADMIN","MANAGER","children","CUSTOMER"],"mappings":"AAAA,SAASA,KAAT,QAAsB,QAAtB,C,CAEA;;AACA,SACCC,OADD,EAECC,OAFD,EAGCC,OAHD,EAICC,OAJD,EAKCC,aALD,EAMCC,aAND,EAOCC,aAPD,EAQCC,SARD,EASCC,OATD,QAUO,YAVP,C,CAYA;;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,CACd;AACCC,EAAAA,SAAS,EAAET,OADZ;AAECU,EAAAA,IAAI,EAAE,GAFP;AAGCC,EAAAA,KAAK,EAAE,YAHR;AAICC,EAAAA,KAAK,EAAE;AAJR,CADc,EAOd;AACCH,EAAAA,SAAS,EAAER,OADZ;AAECS,EAAAA,IAAI,EAAE,WAFP;AAGCC,EAAAA,KAAK,EAAE;AAHR,CAPc,EAYd;AACCF,EAAAA,SAAS,EAAEP,OADZ;AAECQ,EAAAA,IAAI,EAAE,WAFP;AAGCC,EAAAA,KAAK,EAAE;AAHR,CAZc,EAiBd;AACCF,EAAAA,SAAS,EAAEN,OADZ;AAECO,EAAAA,IAAI,EAAE,WAFP;AAGCC,EAAAA,KAAK,EAAE,YAHR;AAICE,EAAAA,UAAU,EAAE,CACXd,KAAK,CAACe,WADK,EAEXf,KAAK,CAACgB,KAFK,EAGXhB,KAAK,CAACiB,OAHK,CAJb;AASCC,EAAAA,QAAQ,EAAE,CACT;AACCR,IAAAA,SAAS,EAAEL,aADZ;AAECM,IAAAA,IAAI,EAAE,UAFP;AAGCC,IAAAA,KAAK,EAAE;AAHR,GADS,EAMT;AACCF,IAAAA,SAAS,EAAEJ,aADZ;AAECK,IAAAA,IAAI,EAAE,UAFP;AAGCC,IAAAA,KAAK,EAAE;AAHR,GANS,EAWT;AACCF,IAAAA,SAAS,EAAEH,aADZ;AAECI,IAAAA,IAAI,EAAE,UAFP;AAGCC,IAAAA,KAAK,EAAE,WAHR;AAICE,IAAAA,UAAU,EAAE,CACXd,KAAK,CAACe,WADK,EAEXf,KAAK,CAACgB,KAFK;AAJb,GAXS;AATX,CAjBc,EAgDd;AACCN,EAAAA,SAAS,EAAEF,SADZ;AAECG,EAAAA,IAAI,EAAE,YAFP;AAGCC,EAAAA,KAAK,EAAE,WAHR;AAICE,EAAAA,UAAU,EAAE,CACXd,KAAK,CAACe,WADK,EAEXf,KAAK,CAACgB,KAFK;AAJb,CAhDc,EAyDd;AACCN,EAAAA,SAAS,EAAED,OADZ;AAECE,EAAAA,IAAI,EAAE,UAFP;AAGCC,EAAAA,KAAK,EAAE,SAHR;AAICE,EAAAA,UAAU,EAAE,CACXd,KAAK,CAACe,WADK,EAEXf,KAAK,CAACgB,KAFK,EAGXhB,KAAK,CAACiB,OAHK,EAIXjB,KAAK,CAACmB,QAJK;AAJb,CAzDc,CAAf","sourcesContent":["import { Roles } from 'config'\n\n// Components\nimport {\n\tModule1,\n\tModule2,\n\tModule3,\n\tModuleN,\n\tModuleNChild1,\n\tModuleNChild2,\n\tModuleNChild3,\n\tDashboard,\n\tProfile,\n} from 'components';\n\n// TODO:\n/*\n* 1. Make title optional\n* 2. Make title multi type support ie: (string, node, react element)\n* 3. Add child route support\n* */\n\n\n/*\n* Route config object supports all react-router's route component props with some additional props ie: (title, permission, children)\n* you can add or remove props from config object it's means it is super customizable and support upto N nesting, child routes must follow the same parent shape,\n* it means the config object is same for both there is no additional key for child nor for parent.\n* you can find route props from here https://reactrouter.com/web/api/Route let's take a look at some additional props\n* 1. permission: permission is an optional prop and it's type is an array of roles, permission is used for allowing certain users/roles\n*  \tto have access of that route and if you skip/omit the permission or it's an empty array that means every authenticated user/role have access to that route.\n* 2. title: title is an optional prop and it's type is a string|node it is used for mapping route link into a navigation\n* 3. children: children is also an optional prop and it's type is an array of route config objects, children are used for nested routes\n* */\n\n\nexport default [\n\t{\n\t\tcomponent: Module1,\n\t\tpath: '/',\n\t\ttitle: 'Module - 1',\n\t\texact: true,\n\t},\n\t{\n\t\tcomponent: Module2,\n\t\tpath: '/module-2',\n\t\ttitle: 'Module - 2',\n\t},\n\t{\n\t\tcomponent: Module3,\n\t\tpath: '/module-3',\n\t\ttitle: 'Module - 3',\n\t},\n\t{\n\t\tcomponent: ModuleN,\n\t\tpath: '/module-n',\n\t\ttitle: 'Module - N',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t\tRoles.MANAGER\n\t\t],\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tcomponent: ModuleNChild1,\n\t\t\t\tpath: '/child-1',\n\t\t\t\ttitle: 'Child - 1',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: ModuleNChild2,\n\t\t\t\tpath: '/child-2',\n\t\t\t\ttitle: 'Child - 2',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: ModuleNChild3,\n\t\t\t\tpath: '/child-3',\n\t\t\t\ttitle: 'Child - 3',\n\t\t\t\tpermission: [\n\t\t\t\t\tRoles.SUPER_ADMIN,\n\t\t\t\t\tRoles.ADMIN\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tcomponent: Dashboard,\n\t\tpath: '/dashboard',\n\t\ttitle: 'Dashboard',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t],\n\t},\n\t{\n\t\tcomponent: Profile,\n\t\tpath: '/profile',\n\t\ttitle: 'Profile',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t\tRoles.MANAGER,\n\t\t\tRoles.CUSTOMER\n\t\t],\n\t},\n]\n"]},"metadata":{},"sourceType":"module"}